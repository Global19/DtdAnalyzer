<!--    
  This is an example/test DTD for the XML-to-JSON features of the DtdAnalyzer.
  This DTD tests some of the more complex features.
  
  The elements are here in alphabetical order for convenience.
-->
<!-- ================================================================= -->


<!ELEMENT Count            (#PCDATA)>	<!-- \d+ -->

<!--~~ <ERROR>
This element (tested in sample2a.xml) becomes a key-value pair, and the key is
specified by the name attribute here.  By default, the key would be "error", but
we want to preserve the all-uppercase "ERROR".  Note that the value of the name 
attribute is an XPath expression, so it is enclosed in quotes.
~~json
<json name='"ERROR"'/>
~~-->
<!ELEMENT ERROR            (#PCDATA)>	<!-- .+ -->

<!--~~ <ErrorList>
This one is special because it can take any number of TermSet and/or OP
children.  So it doesn't fit cleanly into either a JSON array or object.
~~json
<object>
  <array name='"phrasesnotfound"' content='PhraseNotFound'/>
  <array name='"fieldsnotfound"' content='FieldNotFound'/>
</object>
~~-->
<!ELEMENT ErrorList        (PhraseNotFound*,FieldNotFound*)>

<!ELEMENT Explode          (#PCDATA)>	<!-- (Y|N) -->

<!ELEMENT Field            (#PCDATA)>	<!-- .+ -->

<!ELEMENT FieldNotFound    (#PCDATA)>	<!-- .+ -->

<!ELEMENT From             (#PCDATA)>	<!-- .+ -->

<!ELEMENT Id               (#PCDATA)>	<!-- \d+ -->

<!ELEMENT IdList           (Id*)>

<!ELEMENT OP               (#PCDATA)>	<!-- (AND|OR|NOT|RANGE|GROUP) -->

<!--~~ <Result>
This is the root element for a response.
~~ tags
  root
~~-->

<!ELEMENT Result ( 
                   ( 
                     ( Count,
                       ( RetMax,
                         RetStart,
                         IdList,
                         TranslationSet,
                         TranslationStack?
                       )?
                     ) 
                     | ERROR
                   ),
                   ErrorList?
                 )>

<!ELEMENT RetMax           (#PCDATA)>	<!-- \d+ -->

<!ELEMENT RetStart         (#PCDATA)>	<!-- \d+ -->

<!ELEMENT PhraseNotFound   (#PCDATA)>	<!-- .+ -->

<!ELEMENT Term             (#PCDATA)>	<!-- .+ -->

<!ELEMENT TermSet          (Term, Field, Count, Explode)>

<!ELEMENT To               (#PCDATA)>	<!-- .+ -->

<!ELEMENT Translation      (From, To)>

<!--~~ <TranslationStack>
This one is special because it can take any number of TermSet and/or OP
children, in any order.  So it doesn't fit cleanly into either a JSON array or object.
Since we know that TermSet's will get converted to objects, and OP's will get
converted to strings, we can just turn this into an array, without any loss of
information.
~~json
<array/>
~~-->
<!ELEMENT TranslationStack ((TermSet|OP)*)>

<!ELEMENT TranslationSet   (Translation*)>

